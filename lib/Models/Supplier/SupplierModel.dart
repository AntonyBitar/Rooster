import 'package:rooster_app/Models/Supplier/SupplierAddressModel.dart';

import '../City/CityModel.dart';
import '../Company/CompanyModel.dart';
import '../Country/CountryModel.dart';
import '../PaymentTerm/PaymentTermModel.dart';
import '../PriceList/PriceListModel.dart';
import '../User/UserModel.dart';

class Supplier {
  int? id;
  Company? company;
  String? supplierNumber;
  String? type;
  String? name;
  City? city;
  Country? country;
  String? street;
  String? floorAndBuilding;
  String? jobPosition;
  String? phoneCode;
  String? phoneNumber;
  String? mobileCode;
  String? mobileNumber;
  String? reference;
  String? email;
  String? title;
  String? tags;
  String? taxId;
  String? website;
  User? salesperson;
  PaymentTerm? paymentTerm;
  String? note;
  bool? active;
  double? grantedDiscount;
  bool? isBlocked;
  bool? showOnPos;
  bool? isCashCustomer;
  bool? autoGeneratedNumber;
    List<SupplierAddress>? supplierAddress=[];

  Supplier({
    this.id,
    this.company,
    this.supplierNumber,
    this.type,
    this.name,
    this.city,
    this.street,
    this.floorAndBuilding,
    this.jobPosition,
    this.phoneCode,
    this.phoneNumber,
    this.mobileCode,
    this.mobileNumber,
    this.reference,
    this.email,
    this.title,
    this.tags,
    this.taxId,
    this.website,
    this.salesperson,
    this.paymentTerm,
    this.note,
    this.active,
    this.grantedDiscount,
    this.isBlocked,
    this.showOnPos,
    this.isCashCustomer,
    this.autoGeneratedNumber,
    this.supplierAddress,
    this.country

  });

  factory Supplier.fromJson(Map<String, dynamic> json) {
    return Supplier(
      id: json['id'],
      company: json['company'] != null ? Company.fromJson(json['company']) : null,
      supplierAddress: json['supplierAddresses'] != null
          ? (json['supplierAddresses'] as List)
          .map((e) => SupplierAddress.fromJson(e))
          .toList()
          : [],
      supplierNumber: json['supplierNumber'],
      type: json['type'],
      name: json['name'],
      city: json['city'] != null ? City.fromJson(json['city']) : null,
      country: json['country'] != null ? Country.fromJson(json['country']) : null,
      street: json['street'],
      floorAndBuilding: json['floorAndBuilding'],
      jobPosition: json['jobPosition'],
      phoneCode: json['phoneCode'],
      phoneNumber: json['phoneNumber'],
      mobileCode: json['mobileCode'],
      mobileNumber: json['mobileNumber'],
      reference: json['reference'],
      email: json['email'],
      title: json['title'],
      tags: json['tags'],
      taxId: json['taxId'],
      website: json['website'],
      paymentTerm: json['payment_term'] != null ? PaymentTerm.fromJson(json['payment_term']) : null,
      note: json['note'],
      active: json['active'],
      grantedDiscount: (json['grantedDiscount'] != null)
          ? double.tryParse(json['grantedDiscount'].toString())
          : null,
      isBlocked: json['isBlocked'],
      showOnPos: json['showOnPos'],
      isCashCustomer: json['isCashCustomer'],
      autoGeneratedNumber: json['autoGeneratedNumber'],
    );
  }


  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'companyId': company!.id,
      'supplierNumber': supplierNumber,
      'supplierType': type,
      'name': name,
      'cityId': city?.id,
      'countryId': country?.id,
      'street': street,
      'floorAndBuilding': floorAndBuilding,
      'jobPosition': jobPosition,
      'phoneCode': phoneCode,
      'phoneNumber': phoneNumber,
      'mobileCode': mobileCode,
      'mobileNumber': mobileNumber,
      'reference': reference,
      'email': email,
      'title': title,
      'taxId': taxId,
      'website': website,
      'paymentTerm': paymentTerm!.id,
      'note': note,
      'active': active,
      'grantedDiscount': grantedDiscount,
      'isBlocked': isBlocked,
      'showOnPos': showOnPos,
      'isCashCustomer': isCashCustomer,
      'autoGeneratedNumber': autoGeneratedNumber,
      'supplierAddress': supplierAddress,
    };
  }
}
